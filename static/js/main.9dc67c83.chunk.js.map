{"version":3,"sources":["Component/Navbar/Navbar.jsx","Component/Footer/Footer.jsx","Component/AddButton/AddButton.jsx","Component/Card/WeatherDetails/WeatherDetails.jsx","Component/Card/WeatherCard/WeatherCard.jsx","Redux/actions/actionTypes.js","Redux/actions/actionCreators.js","Component/MainLayout/MainLayout.jsx","Utils/utils.js","DataContext/DataContext.js","Component/MainContainer/MainContainer.jsx","Component/Card/MainCard/MainCard.jsx","App.js","Redux/reducers/WeatherEvery3HourReducer.js","Redux/reducers/FavouriteWeatherReducer.js","Redux/reducers/rootReducer.js","Api/api.js","Redux/saga/saga.js","Redux/saga/sagaForecast.js","Redux/saga/rootSaga.js","Redux/store.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","bar","background","link","textAlign","textDecoration","color","title","fontSize","Navbar","setIsOpen","classes","location","useLocation","className","AppBar","position","Toolbar","pathname","to","Typography","variant","marginTop","flex","display","alignItems","toolbar","justifyContent","breakpoints","down","flexDirection","Footer","href","size","fab","top","right","AddButton","onClick","Fab","aria-label","WeatherDetails","data","description","icon","temp","windSpeed","windTransform","Grid","container","justify","Tooltip","style","width","margin","Avatar","alt","src","transform","marginLeft","main","locationText","maxWidth","maxHeight","grid","deleteButton","zIndex","WeatherCard","onDelete","move","weatherData","onRefresh","Card","direction","ButtonBase","CircularProgress","spacing","item","xs","IconButton","FETCH_WEATHER_START","FETCH_WEATHER_SUCCESS","FETCH_WEATHER_EVERY3HOURS_START","FETCH_WEATHER_EVERY3HOURS_SUCCESS","FETCH_WEATHER_EVERY3HOURS_FAIL","FETCH_FAVORITES_START","FETCH_FAVORITES_SUCCESS","FETCH_FAVORITES_FAIL","REMOVE_ERROR_START","REMOVE_ERROR_SUCCESS","mainCard","backgroundColor","MainLayout","weatherLocations","removeLocation","moveItemToFront","useState","weatherRefresh","setWeatherRefresh","locationRefresh","setLocationRefresh","weatherDataArr","useSelector","state","favorites","citiesData","dispatch","useDispatch","onFetchCityWeather","useCallback","type","types","payload","onFetchCities","useEffect","length","prev","sm","map","index","cityKey","LOCAL_STORAGE_KEY","saveToLocalStorage","locations","localStorage","setItem","JSON","stringify","readFromLocalStorage","storedLocations","getItem","parse","capitalizeString","string","words","split","element","charAt","toUpperCase","slice","join","getResponseData","response","weather","Math","round","toString","wind","deg","speed","getCityWeatherDetails","result","list","forecast","date","dt_txt","feels","feels_like","DataContext","createContext","DataProvider","children","units","dataS","setData","Provider","value","setValues","values","prevData","useData","useContext","dialogThem","MainContainer","history","useHistory","error","setWeatherLocations","open","setOpen","errorLocation","handleClickOpen","handleClose","updateLocations","Array","from","setTimeout","params","newWeather","filter","i","DeleteErrorLocation","alert","onRemoveError","push","_","locationIndex","Dialog","onClose","aria-labelledby","DialogTitle","id","DialogContent","DialogContentText","TextField","autoFocus","label","name","fullWidth","required","DialogActions","Button","str","document","getElementsByName","match","includes","borderRadius","backdropFilter","divider","days","MainCard","onFetchCityDetails","cityName","Paper","CSSTransition","appear","in","timeout","classNames","unmountOnExit","Box","m","p","Date","getDay","Divider","FormControlLabel","onChange","checked","control","Switch","ResponsiveContainer","height","LineChart","left","bottom","x1","y1","x2","y2","offset","stopColor","stopOpacity","Legend","XAxis","stroke","dataKey","YAxis","Line","fillOpacity","fill","App","path","exact","component","initialState","weatherEvery3hourReducer","action","citiesArr","favouriteWeatherReducer","newRefreshReduce","reduce","acc","city","rootReducer","combineReducers","WeatherEvery3hourReducer","instance","axios","create","baseURL","process","getWeatherByCityName","a","get","q","appid","status","statusText","getWeatherForecastByCityName","cnt","then","catch","message","fetchWeatherByCityNameSaga","fetchFavoritesSaga","fetchSingleFav","removeErrorSaga","call","Object","assign","put","results","finRresults","key","apiCalls","all","checkErrors","transformedData","console","undefined","fetchWeatherForecastByCityNameSaga","watchFavorites","watcherSagasCities","watcherSagasError","watcherSagasForecast","takeLatest","composeEnhancers","compose","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","ReactDOM","render","getElementById"],"mappings":"sPAQMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFC,SAAU,GAEdC,IAAK,CACDC,WAAY,oDAEhBC,KAAM,CACFH,SAAU,EACVI,UAAW,SACXC,eAAgB,OAChBC,MAAO,QAEXC,MAAO,CACHP,SAAU,EACVI,UAAW,SACXI,SAAU,MACVH,eAAgB,OAChBC,MAAO,YAIA,SAASG,EAAT,GAA+B,EAAbC,UAAc,IACrCC,EAAUf,IACVgB,EAAWC,cAEjB,OACI,qBAAKC,UAAWH,EAAQZ,KAAxB,SACI,cAACgB,EAAA,EAAD,CAAQD,UAAWH,EAAQV,IAAKe,SAAS,SAAzC,SACI,eAACC,EAAA,EAAD,WAC2B,MAAtBL,EAASM,UACN,cAAC,IAAD,CAAMC,GAAG,IAAT,SACI,cAAC,IAAD,MAGe,MAAtBP,EAASM,SACN,cAAC,IAAD,CAAMC,GAAG,IAAIL,UAAWH,EAAQR,KAAhC,SACI,cAACiB,EAAA,EAAD,CAAYC,QAAQ,KAAKP,UAAWH,EAAQJ,MAA5C,0CAKJ,cAACa,EAAA,EAAD,CAAYC,QAAQ,KAAKP,UAAWH,EAAQJ,MAA5C,+C,sBC3ClBX,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJuB,UAAW,OACXpB,WAAY,gEAEdqB,KAAM,CACJC,QAAS,OACTC,WAAY,SACZpB,eAAgB,OAChBC,MAAO,WAEToB,QAAQ,aACNF,QAAS,OACTG,eAAgB,UACf7B,EAAM8B,YAAYC,KAAK,MAAQ,CAC9BC,cAAe,SACfL,WAAY,eAsBHM,EAhBA,WACb,IAAMpB,EAAUf,IAEhB,OACE,cAACmB,EAAA,EAAD,CAAQC,SAAS,WAAWF,UAAWH,EAAQZ,KAAMO,MAAM,YAA3D,SACE,cAACW,EAAA,EAAD,CAASH,UAAWH,EAAQe,QAA5B,SACE,oBAAGZ,UAAWH,EAAQY,KAAMS,KAAK,6BAAjC,UACE,cAAC,IAAD,CAAc1B,MAAM,UAAU2B,KAAK,SACnC,cAACb,EAAA,EAAD,CAAYC,QAAQ,KAApB,4B,0GChCJzB,EAAYC,YAAW,CACzBqC,IAAK,CACDlB,SAAU,QACVmB,IAAK,MACLC,MAAO,SAkBAC,MAdf,YAAiC,IAAZC,EAAW,EAAXA,QACX3B,EAAUf,IAChB,OACI,cAAC2C,EAAA,EAAD,CACIzB,UAAWH,EAAQuB,IACnBI,QAASA,EACTE,aAAW,uBACXlC,MAAM,YAJV,SAMI,cAAC,IAAD,O,mGCsBGmC,MArCf,YAEI,IAAD,IADCC,KAAQC,EACT,EADSA,YAAaC,EACtB,EADsBA,KAAMC,EAC5B,EAD4BA,KAAMC,EAClC,EADkCA,UAAWC,EAC7C,EAD6CA,cAG5C,OACI,8BACI,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAASzB,WAAW,SAA5C,UACKoB,GAAQ,eAACzB,EAAA,EAAD,CAAYC,QAAQ,KAApB,UAA0BwB,EAA1B,WACRD,GACG,cAACO,EAAA,EAAD,CACIC,MAAO,CAAEC,MAAO,MAAOC,OAAQ,SAC/B/C,MAAOoC,EACPH,aAAYG,EAHhB,SAKI,cAACY,EAAA,EAAD,CAAQC,IAAKb,EAAac,IAAKb,MAGtCE,EAAY,GACT,mCACI,eAAC1B,EAAA,EAAD,CAAYC,QAAQ,KAApB,oBACQyB,EADR,SAEuB,OAAlBC,GACG,cAAC,IAAD,CACIK,MAAO,CACHM,UAAU,WAAD,OAAaX,EAAb,QACTY,WAAY,sB,2BCnB9C/D,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrC8D,KAAM,CACF5D,SAAU,KAEd6D,aAAc,CACVzD,UAAW,SACXoB,QAAS,QACTsC,SAAU,OACVC,UAAW,QAEfC,KAAM,CACFV,OAAQ,iBAEZW,aAAc,CACVC,OAAQ,SAyFDC,EArFK,SAAC,GAA0D,IAAxDvD,EAAuD,EAAvDA,SAAUwD,EAA6C,EAA7CA,SAAUC,EAAmC,EAAnCA,KAAMC,EAA6B,EAA7BA,YAAaC,EAAgB,EAAhBA,UACpD5D,EAAUf,IACV+C,EAAc2B,EAAY3B,YAEhC,OACI,mCACI,eAAC6B,EAAA,EAAD,CAAM1D,UAAWH,EAAQiD,KAAzB,UACI,cAACZ,EAAA,EAAD,CACIC,WAAS,EACTwB,UAAU,SACVvB,QAAQ,gBACRzB,WAAW,SAJf,SAMI,cAACiD,EAAA,EAAD,CACIpC,QAAS+B,EAAKzD,EAAU+B,GACxB7B,UAAU,YAFd,SAII,cAAC,IAAD,UACKwD,EACG,mCACI,eAACtB,EAAA,EAAD,CACIC,WAAS,EACTwB,UAAU,SACVvB,QAAQ,gBACRzB,WAAW,SAJf,UAMI,cAACuB,EAAA,EAAD,UACI,8BACI,cAAC5B,EAAA,EAAD,CACIC,QAAQ,KACRP,UACIH,EAAQkD,aAHhB,SAMKjD,QAKb,cAACoC,EAAA,EAAD,IAEA,cAAC,EAAD,CACAoB,SAAUA,EACV1B,KAAM4B,SAId,cAACK,EAAA,EAAD,UAMhB,eAAC3B,EAAA,EAAD,CACIC,WAAS,EACT2B,QAAS,EACTH,UAAU,MACVvB,QAAQ,gBACRzB,WAAW,SACXoD,MAAI,EACJC,GAAI,GACJhE,UAAWH,EAAQqD,KARvB,UAUI,cAAChB,EAAA,EAAD,UACI,cAAC+B,EAAA,EAAD,CACIzC,QAAS8B,EACTtD,UAAWH,EAAQsD,aAFvB,SAII,cAAC,IAAD,QAGR,cAACjB,EAAA,EAAD,UACI,cAAC+B,EAAA,EAAD,CACIzC,QAAS,kBAAMiC,EAAU3D,IACzBE,UAAWH,EAAQsD,aAFvB,SAII,cAAC,IAAD,iBC3Gfe,EAAsB,iCACtBC,GAAwB,mCAGxBC,GAAkC,6CAClCC,GAAoC,+CACpCC,GAAiC,4CAEjCC,GAAwB,oCACxBC,GAA0B,sCAC1BC,GAAuB,kCAEvBC,GAAqB,+BACrBC,GAAuB,kCCqC7B,IC3CD7F,GAAYC,YAAW,CACzBoD,UAAW,CACP3B,UAAW,OAEfoE,SAAU,CACNC,gBAAiB,UAgEVC,OA5Df,YAA4E,IAAtDC,EAAqD,EAArDA,iBAAkBC,EAAmC,EAAnCA,eAAgBC,EAAmB,EAAnBA,gBAC9CpF,EAAUf,KADuD,EAG3BoG,oBAAS,GAHkB,mBAGhEC,EAHgE,KAGhDC,EAHgD,OAIzBF,mBAAS,IAJgB,mBAIhEG,EAJgE,KAI/CC,EAJ+C,KAMjEC,EAAiBC,aAAY,SAACC,GAAD,OAAWA,EAAMC,UAAUC,cAExDC,EAAWC,cACXC,EAAqBC,uBACvB,SAACV,GAAD,OAAqBO,EDvBV,CACXI,KAAMC,EACNC,QCqBgDb,MAChD,CAACO,IAECO,EAAgBJ,uBAClB,SAAChB,GAAD,OAAsBa,EDqBX,CACXI,KAAMC,GACNC,QCvBmDnB,MACnD,CAACa,IAGLQ,qBAAU,WACDf,GACLS,EAAmBT,KAEpB,CAACA,EAAiBF,EAAgBW,IAErCM,qBAAU,WAC0B,IAA5BrB,EAAiBsB,QAErBF,EAAcpB,KACf,CAACA,EAAkBoB,IAItB,IAAM1C,EAAY,SAAC3D,GACfsF,GAAkB,SAACkB,GAAD,OAAWA,KAC7BhB,EAAmBxF,IAGvB,OACI,eAACoC,EAAA,EAAD,CAAMC,WAAS,EAACnC,UAAWH,EAAQsC,UAAnC,UACI,cAACD,EAAA,EAAD,CAAM6B,MAAI,EAACC,IAAI,EAAOuC,GAAI,IAC1B,cAACrE,EAAA,EAAD,CAAM6B,MAAI,EAAC5B,WAAS,EAACoE,GAAI,GAAIzC,QAAS,EAAtC,SAEKyB,EAAeiB,KAAI,SAACzC,EAAM0C,GACvB,OACI,cAACvE,EAAA,EAAD,CAAM6B,MAAI,EAAoBC,GAAI,EAAGuC,GAAI,EAAzC,SACI,cAAC,EAAD,CACIzG,SAAUiE,EAAK2C,QACfpD,SAAU0B,EAAeyB,GACzBlD,KAAM0B,EACNxB,UAAWA,EACXD,YAAaO,EAAKnC,QANVmC,EAAK2C,cAYjC,cAACxE,EAAA,EAAD,CAAM6B,MAAI,EAACC,IAAI,EAAOuC,GAAI,QCxEhCI,GAAoB,YAEnB,SAASC,GAAmBC,GAC/BC,aAAaC,QAAQJ,GAAmBK,KAAKC,UAAUJ,IAGpD,SAASK,KACZ,IAAMC,EAAkBL,aAAaM,QAAQT,IAC7C,OAAOQ,EACDH,KAAKK,MAAMF,GACX,CAAC,OAAQ,SAAU,OAAQ,SAAU,aAAc,YAGtD,SAASG,GAAiBC,GAC7B,IAAIC,EAAQD,EAAOE,MAAM,KAIzB,OAHAD,EAAQA,EAAMhB,KACV,SAACkB,GAAD,OAAaA,EAAQC,OAAO,GAAGC,cAAgBF,EAAQG,MAAM,OAEpDC,KAAK,KAOf,SAASC,GAAgBC,GAAW,IAAD,EACpBA,EAASC,SAAW,GAA/BA,EAD+B,oBAEtC,MAAO,CACHlG,KACIiG,EAASlF,MAAQkF,EAASlF,KAAKf,KACzBmG,KAAKC,MAAMH,EAASlF,KAAKf,MAAMqG,WAC/B,GACVvG,YAAaoG,EAAUA,EAAQpG,YAAc,GAC7CC,KAAMmG,EAAO,2CAC6BA,EAAQnG,KADrC,WAEP,GACNG,cAAe+F,EAASK,KAAOL,EAASK,KAAKC,IAAM,GAAK,KACxDtG,UAAWgG,EAASK,KAAOH,KAAKC,MAAMH,EAASK,KAAKE,OAAS,GAI9D,SAASC,GAAsBC,GAClC,OAAOA,EAAOC,KAAKlC,KAAI,SAACmC,GAAD,MAAe,CAClCC,KAAMD,EAASE,OAAOpB,MAAM,KAAK,GAAGA,MAAM,KAAK,GAAK,MACpD1F,KAAM4G,EAAS7F,KAAKf,KACpB+G,MAAOH,EAAS7F,KAAKiG,e,aC3CvBC,GAAcC,0BAEPC,GAAe,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACjBjE,mBAAS,CAC9BpF,SAAU,iBACVsJ,MAAO,SACPvH,YAAa,aAJyB,mBACnCwH,EADmC,KAC5BC,EAD4B,KAa1C,OACI,cAACN,GAAYO,SAAb,CAAsBC,MAAO,CAAEH,QAAOI,UARxB,SAACC,GACfJ,GAAQ,SAACK,GAAD,oBAAC,gBACFA,GACAD,QAKP,SACKP,KAKAS,GAAU,kBAAMC,qBAAWb,KCFlClK,GAAYC,YAAW,CACzB+K,WAAY,CACR5K,SAAU,EACVI,UAAW,YA2IJyK,OAvIf,WACI,IAAMlK,EAAUf,KAEVkL,EAAUC,cACVC,EAAQ1E,aAAY,SAACC,GAAD,OAAWA,EAAMC,UAAUwE,SAC7CT,EAAcG,KAAdH,UALa,EAM2BvE,mBAC5CgC,IAPiB,mBAMdnC,EANc,KAMIoF,EANJ,OASGjF,oBAAS,GATZ,mBASdkF,EATc,KASRC,EATQ,KAUfC,EAAgBJ,EAAMxD,QACtBd,EAAWC,cACX0E,EAAkB,WACpBF,GAAQ,IAGNG,EAAc,WAChBH,GAAQ,IA0BNI,EAAkB,SAAC5D,GACrBsD,EAAoBO,MAAMC,KAAK9D,IAE/BD,GAAmBC,IAkBnByD,GACAM,YACI,SAACN,IATmB,SAACO,GACzB,IAAMC,EAAa/F,EAAiBgG,QAChC,SAAChH,EAAMiH,GAAP,OAAajH,IAAS8G,KAE1BJ,EAAgBK,GAMRG,CAAoBX,GACpBY,MAAM,oCAEV,IACAZ,GAGR,IAAMa,EAAgBpF,uBAAY,kBAAMH,EJ7BzB,CACXI,KAAMC,OI4B4D,CAClEL,IAiBJ,OAdAQ,qBAAU,WACDkE,GACLa,MACD,CAACb,EAAea,IAYf,qCACI,cAAC,EAAD,CAAW3J,QAAS+I,IACpB,cAAC,GAAD,CACIxF,iBAAkBA,EAClBE,gBAdY,SAACnF,EAAU+B,GAAX,OAA2B,WAC/C4H,EAAU,CACN3J,WACAsJ,MAAO,SACPvH,gBAEJmI,EAAQoB,KAAK,eASLpG,eAjDW,SAAC6F,GAAD,OAAY,WAC/BJ,EACI1F,EAAiBgG,QACb,SAACM,EAAGC,GAAJ,OAAsBA,IAAkBT,QA+CxCN,gBAAiBA,IAErB,eAACgB,EAAA,EAAD,CACIvL,UAAWH,EAAQiK,WACnBM,KAAMA,EACNoB,QAAShB,EACTiB,kBAAgB,oBAJpB,UAMI,cAACC,EAAA,EAAD,CAAaC,GAAG,oBAAhB,0BACA,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,iCACA,cAACC,EAAA,EAAD,CACIC,WAAS,EACTvM,MAAM,YACNgD,OAAO,QACPmJ,GAAG,OACHK,MAAM,OACNC,KAAK,OACLjG,KAAK,OACLkG,WAAS,EACTC,UAAQ,OAGhB,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAQ7K,QAASgJ,EAAahL,MAAM,YAApC,oBAGA,cAAC6M,EAAA,EAAD,CAAQ7K,QA1GD,WACnB,IF7BiB8K,EE6BbxM,EAAWyM,SAASC,kBAAkB,QAAQ,GAAGhD,OF7BpC8C,EE8BHxM,GF7BPuG,QAAU,GAAKiG,EAAIG,MAAM,kDEkCrB1H,EAAiB2H,SAASpF,GAAiBxH,IAClDoL,MAAM,kCAGNf,EAAoB,GAAD,mBACZpF,GADY,CAEfuC,GAAiBxH,MAErB8G,GAAmB,GAAD,mBACX7B,GADW,CAEduC,GAAiBxH,MAErBuK,GAAQ,IAhBRa,MACI,wFAsGqC1L,MAAM,YAAvC,2B,4ICnIdV,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACF0N,aAAc,MACdC,eAAgB,eAGpBC,QAAS,CACLrK,OAAQ,eAIVsK,GAAO,CACT,SACA,SACA,UACA,YACA,WACA,SACA,YA6KWC,GA1KE,WACb,IAAMlN,EAAUf,KADG,EAEU8K,KAArBP,EAFW,EAEXA,MAAOI,EAFI,EAEJA,UACT7H,EAAO4D,aAAY,SAACC,GAAD,OAAWA,EAAMkD,SAASnF,eAC7C1D,EAAWuJ,EAAMvJ,SACjBsJ,EAAQC,EAAMD,MACdvH,EAAcwH,EAAMxH,YACpB+D,EAAWC,cACXmH,EAAqBjH,uBACvB,SAAC8E,GAAD,OAAYjF,EL3BD,CACXI,KAAMC,GACNC,QKyBiD2E,MACjD,CAACjF,IAGLQ,qBAAU,WACDtG,GAELkN,EAAmB,CAAEC,SADJnN,EACcsJ,YAChC,CAACtJ,EAAUkN,EAAoB5D,IAGlC,OACI,mCACc,OAATxH,EACG,cAACiC,EAAA,EAAD,IAEA,cAACqJ,GAAA,EAAD,UACI,cAACC,GAAA,EAAD,CACIC,QAAM,EACNC,GAAIzL,EAAK,GACT0L,QAAS,IACTC,WAAW,OACXC,eAAa,EALjB,SAOI,eAACC,GAAA,EAAD,CAAKzN,UAAWH,EAAQZ,KAAMyO,EAAG,EAAGC,EAAG,EAAvC,UACI,eAACrN,EAAA,EAAD,CAAYC,QAAQ,KAApB,UACKT,EADL,KACiBgN,IAAK,IAAIc,MAAOC,aAEjC,cAACvN,EAAA,EAAD,CAAYC,QAAQ,YAApB,SACKsB,IAEL,cAACiM,GAAA,EAAD,CAAS9N,UAAWH,EAAQgN,UAC5B,eAACvM,EAAA,EAAD,CAAYC,QAAQ,KAApB,UACe,WAAV6I,EACG,cAAC,KAAD,IAEA,cAAC,KAAD,IACD,OAEP,cAAC2E,GAAA,EAAD,CACIC,SAAU,WAEAvE,EAAWJ,EAAMD,MADb,WAAVA,EAC+B,WACA,WAEnC6E,QAAmB,WAAV7E,EACT8E,QAAS,cAACC,GAAA,EAAD,CAAQ3O,MAAM,cAE3B,cAAC4O,GAAA,EAAD,CAAqB7L,MAAM,OAAO8L,OAAQ,IAA1C,SACI,eAACC,GAAA,EAAD,CACI9L,OAAQ,CACJnB,IAAK,GACLC,MAAO,GACPiN,KAAM,EACNC,OAAQ,GAEZ5M,KAAMA,EAPV,UASI,iCACI,iCACI+J,GAAG,UACH8C,GAAG,IACHC,GAAG,IACHC,GAAG,IACHC,GAAG,IALP,UAOI,sBACIC,OAAO,KACPC,UAGU,UAEVC,YAAa,KAEjB,sBACIF,OAAO,MACPC,UAGU,UAEVC,YAAa,OAGrB,iCACIpD,GAAG,UACH8C,GAAG,IACHC,GAAG,IACHC,GAAG,IACHC,GAAG,IALP,UAOI,sBACIC,OAAO,KACPC,UAGU,UAEVC,YAAa,KAEjB,sBACIF,OAAO,MACPC,UAGU,UAEVC,YAAa,UAIzB,cAACC,GAAA,EAAD,IACA,cAACC,GAAA,EAAD,CACIC,OAGU,gBAEVC,QAAQ,SAEZ,cAACC,GAAA,EAAD,CACIF,OAGU,kBAGd,cAAC,KAAD,IACA,cAACG,GAAA,EAAD,CACIrJ,KAAK,WACLmJ,QAAQ,OACRD,OAGU,UAEVI,YAAa,EACbC,KAAK,kBAET,cAACF,GAAA,EAAD,CACIrJ,KAAK,WACLmJ,QAAQ,QACRD,OAGU,UAEVI,YAAa,EACbC,KAAK,iCClL9BC,OAhBf,WACI,OACI,mCACI,eAAC,IAAD,WACA,cAAC7P,EAAD,IACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAO8P,KAAK,IAAIC,OAAK,EAACC,UAAW5F,KACjC,cAAC,IAAD,CAAO0F,KAAK,UAAWE,UAAWhQ,IAClC,cAAC,IAAD,CAAO8P,KAAK,WAAWE,UAAW5C,QAEtC,cAAC,EAAD,U,mBCbR6C,GAAe,CACnB3C,SAAU,GACVzJ,YAAa,KACb0G,MAAO,GACPd,MAAO,IA6BMyG,GA1BkB,WAAmC,IAAlCpK,EAAiC,uDAAzBmK,GAAcE,EAAW,uCACjE,OAAQA,EAAO9J,MACb,KAAK5B,GACH,OAAO,6BACFqB,GADL,IAEEwH,SAAU6C,EAAO5J,QAAQ+G,SACzB7D,MAAO0G,EAAO5J,QAAQkD,QAG1B,KAAK/E,GACH,OAAO,6BACFoB,GADL,IAEEjC,YAAasM,EAAO5J,UAGxB,KAAK5B,GACH,OAAO,6BACFmB,GADL,IAEEyE,MAAO4F,EAAO5J,UAGlB,QACE,OAAOT,IC3BTmK,GAAe,CACjBG,UAAW,GACXpK,WAAY,GACZuE,MAAO,IAiDI8F,GA9CiB,WAAmC,IAAlCvK,EAAiC,uDAAzBmK,GAAcE,EAAW,uCAC9D,OAAQA,EAAO9J,MACX,KAAKzB,GACD,OAAO,6BACAkB,GADP,IAEIsK,UAAU,YAAKD,EAAO5J,WAG9B,KAAK1B,GACD,OAAO,6BACAiB,GADP,IAEIE,WAAW,YAAKmK,EAAO5J,WAG/B,KAAKzB,GACD,OAAO,6BACAgB,GADP,IAEIyE,MAAO4F,EAAO5J,UAEtB,KAAKvB,GACD,OAAO,6BACAc,GADP,IAEIyE,MAAO,KAGf,KAAK/F,GACD,IAAM8L,EAAmB,YAAIxK,EAAME,YAAYuK,QAC3C,SAACC,EAAKzI,EAASsD,GAKX,OAJItD,EAAO,UAAgBoI,EAAO5J,QAAQkK,OACtC1I,EAAQ9F,KAAOkO,EAAO5J,QAAQtE,MAElCuO,EAAG,sBAAOA,GAAP,CAAYzI,MAGnB,IAEJ,OAAO,6BACAjC,GADP,IAEIE,WAAW,YAAKsK,KAGxB,QACI,OAAOxK,IC/CJ4K,GALKC,aAAgB,CAChC5K,UAAWsK,GACXrH,SAAU4H,K,iDCHRC,G,QAAWC,EAAMC,OAAO,CAC1BC,QAASC,mCAGAC,GAAoB,yCAAG,WAAO5D,GAAP,8BAAA6D,EAAA,+EAEPN,GAASO,IAAI,oBAAqB,CACnDlG,OAAQ,CACJmG,EAAG/D,EACHgE,MAAOL,mCACPxH,MAAO,YANa,UASN,OAPhBX,EAFsB,QASjByI,OATiB,uBAUlBlJ,EAAWS,EAAO7G,KAVA,EAiBpBmG,GAAgBC,GALhBjG,EAZoB,EAYpBA,KACAF,EAboB,EAapBA,YACAC,EAdoB,EAcpBA,KACAG,EAfoB,EAepBA,cACAD,EAhBoB,EAgBpBA,UAhBoB,kBAkBjB,CACHD,OACAF,cACAC,OACAG,gBACAD,cAvBoB,gCA2BrB,CAAEkI,MAAOzB,EAAO0I,aA3BK,2DA6BrB,CAAEjH,MAAK,OA7Bc,0DAAH,sDAiCpBkH,GAA4B,yCAAG,gCAAAN,EAAA,6DAAQ7D,EAAR,EAAQA,SAAU7D,EAAlB,EAAkBA,MAAlB,SAC3BoH,GACRO,IAAI,sBAAuB,CACxBlG,OAAQ,CACJmG,EAAG/D,EACHgE,MAAOL,mCACPxH,QACAiI,IAAK,KAQZC,MAAK,SAACtJ,GAAD,OAAcA,EAASpG,QAC5B2P,OAAM,SAACrH,GACJ,MAAO,CAAGA,MAAOA,EAAMsH,YAjBS,mFAAH,sD,sBC9BxBC,I,aAeAC,I,aAoBPC,I,aAcOC,IAjDV,SAAUH,GAA2B3B,GAArC,4EAGkB,OAHlB,SAEOM,EAAON,EAAO5J,QAFrB,SAGwB2L,aAAKhB,GAAsBf,EAAO5J,SAH1D,OASC,OANM8B,EAHP,OAIOxE,EAAcsO,OAAOC,OACvB,GACA,CAAEnQ,KAAMoG,GACR,CAAEoI,KAAMA,IAPb,SASO4B,aXRK,CACXhM,KAAMC,GACNC,QWM8B1C,IAT/B,+BAWC,OAXD,oCAWOwO,aXFK,CACXhM,KDlB0B,gCCmB1BE,QWA6B,EAAD,KAX7B,uDAeA,SAAUwL,GAAmB5B,GAA7B,gFAGc,OAFbmC,EAAU,GACVC,EAAc,GAFf,SAGoBpC,EAAO5J,QAAQM,KAAI,SAAC2L,GAAD,OAASR,GAAeQ,MAH/D,OAIO,OADJC,EAHH,gBAIaC,aAAID,GAJjB,OAIHH,EAJG,OAKCK,GAAc,EACTtH,EAAI,EANV,aAMaA,EAAIiH,EAAQ5L,QANzB,oBAO2B,qBAAf4L,EAAQjH,GAPpB,iBAQKsH,GAAc,EARnB,4BASYL,EAAQjH,GAAGpJ,KAAKsI,MAT5B,wDAYKgI,EAAY9G,KAAK6G,EAAQjH,IAZ9B,QAMiCA,IANjC,2BAeEsH,EAfF,iBAgBC,OAhBD,UAgBON,aXkBK,CACXhM,KAAMC,GACNC,QWpBgCgM,IAhBjC,yCAoBP,SAAUP,GAAejL,GAAzB,0EAE4B,OAF5B,kBAEkCmL,aAAKhB,GAAsBnK,GAF7D,UAEclD,EAFd,SAGc+O,EAAkB,CAAE7L,UAAS9E,KAAM4B,IACrB5B,KAAKsI,MAJjC,gBAKY,OALZ,SAKkB8H,aXgBC,CACXhM,KAAMC,GACNC,QWlBmCqM,IAL3C,gCAOeA,GAPf,yCASQC,QAAQtI,MAAM,2BATtB,uBAUeuI,GAVf,uDAcO,SAAUb,KAAV,kEACH,OADG,SACGI,aXqBS,CACXhM,KAAMC,KWvBP,wC,iBCnDUyM,IAAV,SAAUA,GAAmC5C,GAA7C,0EAEc,OAFd,kBAEoB+B,aAAKT,GAA8BtB,EAAO5J,SAF9D,OAGiB,OADd8B,EAFH,gBAGuB6J,aAAKrJ,GAAuBR,GAHnD,OAIH,OADMxE,EAHH,gBAIGwO,aZuBS,CACXhM,KAAMC,GACNC,QYzBqC1C,IAJtC,+BAMH,OANG,oCAMGwO,cZ4BoC9H,EY5BF,EAAD,GZ6BxB,CACXlE,KAAMC,GACNC,QAASgE,KYrCV,kCZkCA,IAAuCA,IYlCvC,kB,iBCHUyI,I,aAMAC,I,aAMAC,I,aAMAC,IAlBV,SAAUH,KAAV,kEAEC,OAFD,KACGN,KADH,SAEOU,aAAWxO,GAAuBmN,IAFzC,OACH,OADG,kCACH,cADG,wCAMA,SAAUkB,KAAV,kEAED,OAFC,KACGP,KADH,SAEKU,aAAW7O,EAAqBuN,IAFrC,OACH,OADG,kCACH,cADG,wCAMA,SAAUoB,KAAV,kEAED,OAFC,KACGR,KADH,SAEKU,aAAWrO,GAAoBkN,IAFpC,OACH,OADG,kCACH,cADG,wCAMA,SAAUkB,KAAV,kEAED,OAFC,KACGT,KADH,SAEKU,aAAW3O,GAAiCsO,IAFjD,OACH,OADG,kCACH,cADG,wCCbP,IAAMM,GAEMC,KAENC,GAAiBC,eAEVC,GAAQC,aAAYhD,GAAa2C,GAC5CM,aAAgBJ,MAGlBA,GAAeK,IAAIZ,IACnBO,GAAeK,IAAIX,IACnBM,GAAeK,IAAIT,IACnBI,GAAeK,IAAIV,ICfnBW,IAASC,OACL,cAAC,IAAD,CAAUL,MAAOA,GAAjB,SACI,cAAC,GAAD,UACI,cAAC,GAAD,QAGR7G,SAASmH,eAAe,W","file":"static/js/main.9dc67c83.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Brightness4SharpIcon from \"@material-ui/icons/Brightness4Sharp\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    bar: {\r\n        background: \"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\",\r\n    },\r\n    link: {\r\n        flexGrow: 1,\r\n        textAlign: \"center\",\r\n        textDecoration: 'none',\r\n        color: '#fff'\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n        textAlign: \"center\",\r\n        fontSize: \"2em\",\r\n        textDecoration: 'none',\r\n        color: '#fff'\r\n    },\r\n}));\r\n\r\nexport default function Navbar({ setIsOpen }) {\r\n    const classes = useStyles();\r\n    const location = useLocation();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar className={classes.bar} position=\"static\">\r\n                <Toolbar>\r\n                    {location.pathname !== \"/\" && (\r\n                        <Link to=\"/\">\r\n                            <Brightness4SharpIcon />\r\n                        </Link>\r\n                    )}\r\n                    {location.pathname !== \"/\" ? (\r\n                        <Link to=\"/\" className={classes.link}>\r\n                            <Typography variant=\"h2\" className={classes.title} >\r\n                                Weather Forecast Worldwide\r\n                            </Typography>\r\n                        </Link>\r\n                    ) : (\r\n                        <Typography variant=\"h2\" className={classes.title}>\r\n                            Weather Forecast Worldwide\r\n                        </Typography>\r\n                    )}\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { AiFillGithub,  } from 'react-icons/ai';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    marginTop: '20px',\r\n    background: \"linear-gradient(45deg, #1b2145 30%, rgb(97 97 97 / 90%) 90%)\",\r\n  },\r\n  flex: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    textDecoration: 'none',\r\n    color: '#fafafa'\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    [theme.breakpoints.down('sm')]: {\r\n      flexDirection: 'column',\r\n      alignItems: 'center'\r\n    }\r\n  }\r\n  \r\n}))\r\n\r\nconst Footer = () => {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <AppBar position='relative' className={classes.root} color='secondary'>\r\n      <Toolbar className={classes.toolbar}>\r\n        <a className={classes.flex} href='https://github.com/Vldkvll'>\r\n          <AiFillGithub color='#fafafa' size='48px' />\r\n          <Typography variant='h4'>Github</Typography>\r\n        </a>\r\n        \r\n      </Toolbar>\r\n    </AppBar>\r\n  )\r\n}\r\n\r\nexport default Footer;","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\n\r\nconst useStyles = makeStyles({\r\n    fab: {\r\n        position: \"fixed\",\r\n        top: \"4em\",\r\n        right: \"4em\",\r\n    },\r\n});\r\n\r\nfunction AddButton({ onClick }) {\r\n    const classes = useStyles();\r\n    return (\r\n        <Fab\r\n            className={classes.fab}\r\n            onClick={onClick}\r\n            aria-label=\"add weather location\"\r\n            color=\"secondary\"\r\n        > \r\n            <AddIcon />\r\n        </Fab>\r\n    );\r\n}\r\n\r\nexport default AddButton;\r\n","import React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport ArrowRightAltIcon from \"@material-ui/icons/ArrowRightAlt\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nfunction WeatherDetails({\r\n    data: { description, icon, temp, windSpeed, windTransform },\r\n}) {\r\n\r\n    return (\r\n        <div>\r\n            <Grid container justify=\"center\" alignItems=\"center\">\r\n                {temp && <Typography variant=\"h6\">{temp}&deg;C</Typography>}\r\n                {icon && (\r\n                    <Tooltip\r\n                        style={{ width: \"4em\", margin: \"0.5em\" }}\r\n                        title={description}\r\n                        aria-label={description}\r\n                    >\r\n                        <Avatar alt={description} src={icon} />\r\n                    </Tooltip>\r\n                )}\r\n                {windSpeed > 0 && (\r\n                    <>\r\n                        <Typography variant=\"h6\">\r\n                            {`${windSpeed} km/h`}\r\n                            {windTransform !== null && (\r\n                                <ArrowRightAltIcon\r\n                                    style={{\r\n                                        transform: `rotateZ(${windTransform}deg)`,\r\n                                        marginLeft: \"0.5em\",\r\n                                    }}\r\n                                />\r\n                            )}\r\n                        </Typography>\r\n                    </>\r\n                )}\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default WeatherDetails;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CardContent from \"@material-ui/core/CardActions\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\r\nimport WeatherDetails from \"../WeatherDetails/WeatherDetails\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    main: {\r\n        flexGrow: \"1\",\r\n    },\r\n    locationText: {\r\n        textAlign: \"center\",\r\n        display: \"block\",\r\n        maxWidth: \"100%\",\r\n        maxHeight: \"100%\",\r\n    },\r\n    grid: {\r\n        margin: \"0 0px 5px 5px\",\r\n    },\r\n    deleteButton: {\r\n        zIndex: \"1\",\r\n    },\r\n}));\r\n\r\nconst WeatherCard = ({ location, onDelete, move, weatherData, onRefresh }) => {\r\n    const classes = useStyles();\r\n    const description = weatherData.description;\r\n    \r\n    return (\r\n        <>\r\n            <Card className={classes.main}>\r\n                <Grid\r\n                    container\r\n                    direction=\"column\"\r\n                    justify=\"space-between\"\r\n                    alignItems=\"center\"\r\n                >\r\n                    <ButtonBase\r\n                        onClick={move(location, description)}\r\n                        className=\"fullWidth\"\r\n                    >\r\n                        <CardContent>\r\n                            {weatherData ? (\r\n                                <>\r\n                                    <Grid\r\n                                        container\r\n                                        direction=\"column\"\r\n                                        justify=\"space-between\"\r\n                                        alignItems=\"center\"\r\n                                    >\r\n                                        <Grid>\r\n                                            <div>\r\n                                                <Typography\r\n                                                    variant=\"h4\"\r\n                                                    className={\r\n                                                        classes.locationText\r\n                                                    }\r\n                                                >\r\n                                                    {location}\r\n                                                </Typography>\r\n                                            </div>\r\n                                        </Grid>\r\n\r\n                                        <Grid></Grid>\r\n\r\n                                        <WeatherDetails\r\n                                        onDelete={onDelete}\r\n                                        data={weatherData} />\r\n                                    </Grid>\r\n                                </>\r\n                            ) : (\r\n                                <CircularProgress />\r\n                            )}\r\n                        </CardContent>\r\n                    </ButtonBase>\r\n                </Grid>\r\n\r\n                <Grid\r\n                    container\r\n                    spacing={2}\r\n                    direction=\"row\"\r\n                    justify=\"space-between\"\r\n                    alignItems=\"center\"\r\n                    item\r\n                    xs={12}\r\n                    className={classes.grid}\r\n                >\r\n                    <Grid>\r\n                        <IconButton\r\n                            onClick={onDelete}\r\n                            className={classes.deleteButton}\r\n                        >\r\n                            <DeleteIcon />\r\n                        </IconButton>\r\n                    </Grid>\r\n                    <Grid>\r\n                        <IconButton\r\n                            onClick={() => onRefresh(location)}\r\n                            className={classes.deleteButton}\r\n                        >\r\n                            <RefreshIcon />\r\n                        </IconButton>\r\n                    </Grid>\r\n                </Grid>\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default WeatherCard;\r\n","export const FETCH_WEATHER_START = \"MY_WEATHRE_FETCH_WEATHER_START\";\r\nexport const FETCH_WEATHER_SUCCESS = \"MY_WEATHRE_FETCH_WEATHER_SUCCESS\";\r\nexport const FETCH_WEATHER_FAIL = \"MY_WEATHRE_FETCH_WEATHER_FAIL\";\r\n\r\nexport const FETCH_WEATHER_EVERY3HOURS_START = \"MY_WEATHRE_FETCH_WEATHER_EVERY3HOURS_START\";\r\nexport const FETCH_WEATHER_EVERY3HOURS_SUCCESS = \"MY_WEATHRE_FETCH_WEATHER_EVERY3HOURS_SUCCESS\";\r\nexport const FETCH_WEATHER_EVERY3HOURS_FAIL = \"MY_WEATHRE_FETCH_WEATHER_EVERY3HOURS_FAIL\";\r\n\r\nexport const FETCH_FAVORITES_START = \"MY_WEATHRE_FFETCH_FAVORITES_START\";\r\nexport const FETCH_FAVORITES_SUCCESS = \"MY_WEATHRE_FETCH_FAVORITES__SUCCESS\";\r\nexport const FETCH_FAVORITES_FAIL = \"MY_WEATHRE_FETCH_FAVORITES_FAIL\";\r\n\r\nexport const REMOVE_ERROR_START = \"MY_WEATHREREMOVE_ERROR_START\";\r\nexport const REMOVE_ERROR_SUCCESS = \"MY_WEATHRE_REMOVE_ERROR_SUCCESS\";\r\n\r\n\r\n","import * as types from \"./actionTypes\";\r\n\r\nexport function fetchWeatherStart(payload) {\r\n    const action = {\r\n        type: types.FETCH_WEATHER_START,\r\n        payload,\r\n    };\r\n    return action;\r\n}\r\n\r\nexport function fetchWeatherSuccess(payload) {\r\n    const action = {\r\n        type: types.FETCH_WEATHER_SUCCESS,\r\n        payload,\r\n    };\r\n    return action;\r\n}\r\n\r\nexport function fetchWeatherFailed(error) {\r\n    const action = {\r\n        type: types.FETCH_WEATHER_FAIL,\r\n        payload: error,\r\n    };\r\n    return action;\r\n}\r\n\r\nexport function fetchWeatherEveryHoursStart(payload) {\r\n    const action = {\r\n        type: types.FETCH_WEATHER_EVERY3HOURS_START,\r\n        payload,\r\n    };\r\n    return action;\r\n}\r\n\r\nexport function fetchWeatherEvery3HoursSuccess(payload) {\r\n    const action = {\r\n        type: types.FETCH_WEATHER_EVERY3HOURS_SUCCESS,\r\n        payload,\r\n    };\r\n    return action;\r\n}\r\n\r\nexport function fetchWeatherEvery3HoursFailed(error) {\r\n    const action = {\r\n        type: types.FETCH_WEATHER_EVERY3HOURS_FAIL,\r\n        payload: error,\r\n    };\r\n    return action;\r\n}\r\n\r\nexport const fetchFavoritesStart = (payload) => {\r\n    const action = {\r\n        type: types.FETCH_FAVORITES_START,\r\n        payload,\r\n    };\r\n    return action;\r\n};\r\n\r\nexport const fetchFavoritesSuccess = (payload) => {\r\n    const action = {\r\n        type: types.FETCH_FAVORITES_SUCCESS,\r\n        payload,\r\n    };\r\n    return action;\r\n};\r\nexport const fetchFavoritesFailed = (error) => {\r\n    const action = {\r\n        type: types.FETCH_FAVORITES_FAIL,\r\n        payload: error,\r\n    };\r\n    return action;\r\n};\r\n\r\nexport const removeErrorStart = () => {\r\n    const action = {\r\n        type: types.REMOVE_ERROR_START,\r\n    };\r\n    return action;\r\n};\r\n\r\nexport const removeErrorSuccess = () => {\r\n    const action = {\r\n        type: types.REMOVE_ERROR_SUCCESS,\r\n    };\r\n    return action;\r\n};\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport WeatherCard from \"../Card/WeatherCard/WeatherCard\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchFavoritesStart, fetchWeatherStart } from \"../../Redux/actions/actionCreators\";\r\n\r\nconst useStyles = makeStyles({\r\n    container: {\r\n        marginTop: \"2em\",\r\n    },\r\n    mainCard: {\r\n        backgroundColor: \"blue\",\r\n    },\r\n});\r\n\r\nfunction MainLayout({ weatherLocations, removeLocation, moveItemToFront }) {\r\n    const classes = useStyles();\r\n\r\n    const [weatherRefresh, setWeatherRefresh] = useState(false);\r\n    const [locationRefresh, setLocationRefresh] = useState('');\r\n    \r\n    const weatherDataArr = useSelector((state) => state.favorites.citiesData);\r\n\r\n    const dispatch = useDispatch();\r\n    const onFetchCityWeather = useCallback(\r\n        (locationRefresh) => dispatch(fetchWeatherStart(locationRefresh)),\r\n        [dispatch]\r\n    );\r\n    const onFetchCities = useCallback(\r\n        (weatherLocations) => dispatch(fetchFavoritesStart(weatherLocations)),\r\n        [dispatch]\r\n    );\r\n\r\n    useEffect(() => {\r\n        if (!locationRefresh) return;\r\n        onFetchCityWeather(locationRefresh)\r\n        // dispatch(fetchWeatherStart(locationRefresh));\r\n    }, [locationRefresh, weatherRefresh, onFetchCityWeather]);\r\n    \r\n    useEffect(() => {\r\n        if (weatherLocations.length === 0) return;\r\n\r\n        onFetchCities(weatherLocations);\r\n    }, [weatherLocations, onFetchCities]);\r\n\r\n    \r\n    \r\n    const onRefresh = (location) => {\r\n        setWeatherRefresh((prev) => !prev);\r\n        setLocationRefresh(location)\r\n    };\r\n\r\n    return (\r\n        <Grid container className={classes.container}>\r\n            <Grid item xs={false} sm={1} />\r\n            <Grid item container sm={10} spacing={3}>\r\n\r\n                {weatherDataArr.map((item, index) => {\r\n                    return (\r\n                        <Grid item key={item.cityKey} xs={8} sm={6}>\r\n                            <WeatherCard\r\n                                location={item.cityKey}\r\n                                onDelete={removeLocation(index)}\r\n                                move={moveItemToFront}\r\n                                onRefresh={onRefresh}\r\n                                weatherData={item.data}                      \r\n                            />\r\n                        </Grid>\r\n                    );\r\n                })}\r\n            </Grid>\r\n            <Grid item xs={false} sm={1} />\r\n        </Grid>\r\n    );\r\n}\r\nexport default MainLayout;\r\n","const LOCAL_STORAGE_KEY = \"locations\";\r\n\r\nexport function saveToLocalStorage(locations) {\r\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(locations));\r\n}\r\n\r\nexport function readFromLocalStorage() {\r\n    const storedLocations = localStorage.getItem(LOCAL_STORAGE_KEY);\r\n    return storedLocations\r\n        ? JSON.parse(storedLocations)\r\n        : [\"Kyiv\", \"Warsaw\", \"Rome\", \"London\", \"Washington\", \"New York\"];\r\n}\r\n\r\nexport function capitalizeString(string) {\r\n    let words = string.split(\" \");\r\n    words = words.map(\r\n        (element) => element.charAt(0).toUpperCase() + element.slice(1)\r\n    );\r\n    return words.join(\" \");\r\n}\r\n\r\nexport function isLetter(str) {\r\n    return str.length >= 2 && str.match(/^[A-Za-zÀ-ÿ\\.'*`´’,\\- \"]{1,34}$/i);\r\n}\r\n\r\nexport function getResponseData(response) {\r\n    const [weather] = response.weather || [];\r\n    return {\r\n        temp:\r\n            response.main && response.main.temp\r\n                ? Math.round(response.main.temp).toString()\r\n                : \"\",\r\n        description: weather ? weather.description : \"\",\r\n        icon: weather\r\n            ? `http://openweathermap.org/img/wn/${weather.icon}@2x.png`\r\n            : \"\",\r\n        windTransform: response.wind ? response.wind.deg - 90 : null,\r\n        windSpeed: response.wind ? Math.round(response.wind.speed) : 0,\r\n    };\r\n}\r\n\r\nexport function getCityWeatherDetails(result) {\r\n    return result.list.map((forecast) => ({\r\n        date: forecast.dt_txt.split(\" \")[1].split(\":\")[0] + \":00\",\r\n        temp: forecast.main.temp,\r\n        feels: forecast.main.feels_like,\r\n    }));\r\n}\r\n","import React, { createContext, useState, useContext } from \"react\";\r\n\r\nconst DataContext = createContext();\r\n\r\nexport const DataProvider = ({ children }) => {\r\n    const [dataS, setData] = useState({\r\n        location: \"Rio de Janeiro\",\r\n        units: \"metric\",\r\n        description: \"Carnaval\",\r\n    });\r\n    const setValues = (values) => {\r\n        setData((prevData) => ({\r\n            ...prevData,\r\n            ...values,\r\n        }));\r\n    };\r\n\r\n    return (\r\n        <DataContext.Provider value={{ dataS, setValues }}>\r\n            {children}\r\n        </DataContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useData = () => useContext(DataContext);\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport AddButton from \"../AddButton/AddButton\";\r\nimport MainLayout from \"../MainLayout/MainLayout\";\r\nimport {\r\n    saveToLocalStorage,\r\n    readFromLocalStorage,\r\n    capitalizeString,\r\n    isLetter,\r\n} from \"../../Utils/utils\";\r\nimport { useData } from \"../../DataContext/DataContext\";\r\nimport { useHistory } from \"react-router\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { removeErrorStart } from \"../../Redux/actions/actionCreators\";\r\n\r\nconst useStyles = makeStyles({\r\n    dialogThem: {\r\n        flexGrow: 1,\r\n        textAlign: \"center\",\r\n    },\r\n});\r\n\r\nfunction MainContainer() {\r\n    const classes = useStyles();\r\n\r\n    const history = useHistory();\r\n    const error = useSelector((state) => state.favorites.error);\r\n    const { setValues } = useData();\r\n    const [weatherLocations, setWeatherLocations] = useState(\r\n        readFromLocalStorage\r\n    );\r\n    const [open, setOpen] = useState(false);\r\n    const errorLocation = error.cityKey;\r\n    const dispatch = useDispatch();\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleAddClick = () => {\r\n        let location = document.getElementsByName(\"city\")[0].value;\r\n        if (!isLetter(location)) {\r\n            alert(\r\n                \"Request must contain only English characters. Enter your request correctly, please.\"\r\n            );\r\n            return;\r\n        } else if (weatherLocations.includes(capitalizeString(location))) {\r\n            alert(\"This location already exists.\");\r\n            return\r\n        } else {\r\n            setWeatherLocations([\r\n                ...weatherLocations,\r\n                capitalizeString(location),\r\n            ]);\r\n            saveToLocalStorage([\r\n                ...weatherLocations,\r\n                capitalizeString(location),\r\n            ]);\r\n            setOpen(false);\r\n        }\r\n    };\r\n\r\n    const updateLocations = (locations) => {\r\n        setWeatherLocations(Array.from(locations));\r\n\r\n        saveToLocalStorage(locations);\r\n    };\r\n\r\n    const removeLocation = (params) => () => {\r\n        updateLocations(\r\n            weatherLocations.filter(\r\n                (_, locationIndex) => locationIndex !== params\r\n            )\r\n        );\r\n    };\r\n\r\n    const DeleteErrorLocation = (params) => {\r\n        const newWeather = weatherLocations.filter(\r\n            (item, i) => item !== params\r\n        );\r\n        updateLocations(newWeather);\r\n    };\r\n\r\n    if (errorLocation) {\r\n        setTimeout(\r\n            (errorLocation) => {\r\n                DeleteErrorLocation(errorLocation);\r\n                alert(\"This location does not exists.\");\r\n            },\r\n            1000,\r\n            errorLocation\r\n        );\r\n    }\r\n    const onRemoveError = useCallback(() => dispatch(removeErrorStart()), [\r\n        dispatch,\r\n    ]);\r\n\r\n    useEffect(() => {\r\n        if (!errorLocation) return;\r\n        onRemoveError();\r\n    }, [errorLocation, onRemoveError]);\r\n\r\n    const moveItemToFront = (location, description) => () => {\r\n        setValues({\r\n            location,\r\n            units: \"metric\",\r\n            description,\r\n        });\r\n        history.push(\"./weather\");\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <AddButton onClick={handleClickOpen} />\r\n            <MainLayout\r\n                weatherLocations={weatherLocations}\r\n                moveItemToFront={moveItemToFront}\r\n                removeLocation={removeLocation}\r\n                handleClickOpen={handleClickOpen}\r\n            />\r\n            <Dialog\r\n                className={classes.dialogThem}\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"form-dialog-title\"\r\n            >\r\n                <DialogTitle id=\"form-dialog-title\">Add Location</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>Enter a City Name:</DialogContentText>\r\n                    <TextField\r\n                        autoFocus\r\n                        color=\"secondary\"\r\n                        margin=\"dense\"\r\n                        id=\"name\"\r\n                        label=\"City\"\r\n                        name=\"city\"\r\n                        type=\"text\"\r\n                        fullWidth\r\n                        required\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"secondary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={handleAddClick} color=\"secondary\">\r\n                        Add\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default MainContainer;\r\n","import React, { useCallback, useEffect } from \"react\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { RiCelsiusFill, RiFahrenheitFill } from \"react-icons/ri\";\r\nimport {\r\n    ResponsiveContainer,\r\n    LineChart,\r\n    Line,\r\n    XAxis,\r\n    YAxis,\r\n    Tooltip,\r\n    Legend,\r\n} from \"recharts\";\r\nimport { useData } from \"../../../DataContext/DataContext\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchWeatherEveryHoursStart } from \"../../../Redux/actions/actionCreators\";\r\nimport { Paper } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        borderRadius: \"5px\",\r\n        backdropFilter: \"blur(100px)\",\r\n    },\r\n\r\n    divider: {\r\n        margin: \".5rem 0\",\r\n    },\r\n}));\r\n\r\nconst days = [\r\n    \"Sunday\",\r\n    \"Monday\",\r\n    \"Tuesday\",\r\n    \"Wednesday\",\r\n    \"Thursday\",\r\n    \"Friday\",\r\n    \"Saturday\",\r\n];\r\n\r\nconst MainCard = () => {\r\n    const classes = useStyles();\r\n    const { dataS, setValues } = useData();\r\n    const data = useSelector((state) => state.forecast.weatherData);\r\n    const location = dataS.location;\r\n    const units = dataS.units;\r\n    const description = dataS.description;\r\n    const dispatch = useDispatch();\r\n    const onFetchCityDetails = useCallback(\r\n        (params) => dispatch(fetchWeatherEveryHoursStart(params)),\r\n        [dispatch]\r\n    );\r\n\r\n    useEffect(() => {\r\n        if (!location) return;\r\n        const cityName = location;\r\n        onFetchCityDetails({ cityName, units });\r\n    }, [location, onFetchCityDetails, units]);\r\n    const theme = \"\";\r\n\r\n    return (\r\n        <>\r\n            {data === null ? (\r\n                <CircularProgress />\r\n            ) : (\r\n                <Paper>\r\n                    <CSSTransition\r\n                        appear\r\n                        in={data[0]}\r\n                        timeout={250}\r\n                        classNames=\"fade\"\r\n                        unmountOnExit\r\n                    >\r\n                        <Box className={classes.root} m={2} p={1}>\r\n                            <Typography variant=\"h3\">\r\n                                {location}, {days[new Date().getDay()]}\r\n                            </Typography>\r\n                            <Typography variant=\"subtitle2\">\r\n                                {description}\r\n                            </Typography>\r\n                            <Divider className={classes.divider} />\r\n                            <Typography variant=\"h4\">\r\n                                {units === \"metric\" ? (\r\n                                    <RiCelsiusFill />\r\n                                ) : (\r\n                                    <RiFahrenheitFill />\r\n                                )}{\" \"}\r\n                            </Typography>\r\n                            <FormControlLabel\r\n                                onChange={() => {\r\n                                    units === \"metric\"\r\n                                        ? setValues((dataS.units = \"imperial\"))\r\n                                        : setValues((dataS.units = \"metric\"));\r\n                                }}\r\n                                checked={units === \"metric\"}\r\n                                control={<Switch color=\"primary\" />}\r\n                            ></FormControlLabel>\r\n                            <ResponsiveContainer width=\"100%\" height={300}>\r\n                                <LineChart\r\n                                    margin={{\r\n                                        top: 10,\r\n                                        right: 30,\r\n                                        left: 0,\r\n                                        bottom: 0,\r\n                                    }}\r\n                                    data={data}\r\n                                >\r\n                                    <defs>\r\n                                        <linearGradient\r\n                                            id=\"colorUv\"\r\n                                            x1=\"0\"\r\n                                            y1=\"0\"\r\n                                            x2=\"0\"\r\n                                            y2=\"1\"\r\n                                        >\r\n                                            <stop\r\n                                                offset=\"5%\"\r\n                                                stopColor={\r\n                                                    theme === \"dark\"\r\n                                                        ? \"#21D2DE\"\r\n                                                        : \"#F85F0F\"\r\n                                                }\r\n                                                stopOpacity={0.8}\r\n                                            />\r\n                                            <stop\r\n                                                offset=\"95%\"\r\n                                                stopColor={\r\n                                                    theme === \"dark\"\r\n                                                        ? \"#21D2DE\"\r\n                                                        : \"#F85F0F\"\r\n                                                }\r\n                                                stopOpacity={0}\r\n                                            />\r\n                                        </linearGradient>\r\n                                        <linearGradient\r\n                                            id=\"colorPv\"\r\n                                            x1=\"0\"\r\n                                            y1=\"0\"\r\n                                            x2=\"0\"\r\n                                            y2=\"1\"\r\n                                        >\r\n                                            <stop\r\n                                                offset=\"5%\"\r\n                                                stopColor={\r\n                                                    theme === \"dark\"\r\n                                                        ? \"#DE7A2A\"\r\n                                                        : \"#9607F8\"\r\n                                                }\r\n                                                stopOpacity={0.8}\r\n                                            />\r\n                                            <stop\r\n                                                offset=\"95%\"\r\n                                                stopColor={\r\n                                                    theme === \"dark\"\r\n                                                        ? \"#DE7A2A\"\r\n                                                        : \"#9607F8\"\r\n                                                }\r\n                                                stopOpacity={0}\r\n                                            />\r\n                                        </linearGradient>\r\n                                    </defs>\r\n                                    <Legend />\r\n                                    <XAxis\r\n                                        stroke={\r\n                                            theme === \"dark\"\r\n                                                ? \"#fff\"\r\n                                                : \"rgba(0,0,0,7)\"\r\n                                        }\r\n                                        dataKey=\"date\"\r\n                                    />\r\n                                    <YAxis\r\n                                        stroke={\r\n                                            theme === \"dark\"\r\n                                                ? \"#fff\"\r\n                                                : \"rgba(0,0,0,7)\"\r\n                                        }\r\n                                    />\r\n                                    <Tooltip />\r\n                                    <Line\r\n                                        type=\"montoone\"\r\n                                        dataKey=\"temp\"\r\n                                        stroke={\r\n                                            theme === \"dark\"\r\n                                                ? \"#21D2DE\"\r\n                                                : \"#F85F0F\"\r\n                                        }\r\n                                        fillOpacity={1}\r\n                                        fill=\"url(#colorUv)\"\r\n                                    />\r\n                                    <Line\r\n                                        type=\"monotone\"\r\n                                        dataKey=\"feels\"\r\n                                        stroke={\r\n                                            theme === \"dark\"\r\n                                                ? \"#DE7A2A\"\r\n                                                : \"#9607F8\"\r\n                                        }\r\n                                        fillOpacity={1}\r\n                                        fill=\"url(#colorPv)\"\r\n                                    />\r\n                                </LineChart>\r\n                            </ResponsiveContainer>\r\n                        </Box>\r\n                    </CSSTransition>\r\n                </Paper>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default MainCard;\r\n","import React from \"react\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport \"./App.css\";\nimport Navbar from \"./Component/Navbar/Navbar\";\nimport Footer from \"./Component/Footer/Footer\";\nimport MainContainer from \"./Component/MainContainer/MainContainer\";\nimport MainCard from \"./Component/Card/MainCard/MainCard\";\n\nfunction App() {\n    return (\n        <>\n            <Router>\n            <Navbar />\n                <Switch>\n                    <Route path=\"/\" exact component={MainContainer} />\n                    <Route path=\"/navbar\"  component={Navbar} />\n                    <Route path=\"/weather\" component={MainCard} />\n                </Switch>\n                <Footer />\n            </Router>\n        </>\n    );\n}\n\nexport default App;\n","import {\r\n    FETCH_WEATHER_EVERY3HOURS_SUCCESS,\r\n    FETCH_WEATHER_EVERY3HOURS_START,\r\n    FETCH_WEATHER_EVERY3HOURS_FAIL,\r\n  } from \"../actions/actionTypes\";\r\n  \r\n  const initialState = {\r\n    cityName: \"\",\r\n    weatherData: null,\r\n    error: \"\",\r\n    units: \"\"\r\n  };\r\n  \r\n  const weatherEvery3hourReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n      case FETCH_WEATHER_EVERY3HOURS_START:\r\n        return {\r\n          ...state,\r\n          cityName: action.payload.cityName,\r\n          units: action.payload.units\r\n        };\r\n  \r\n      case FETCH_WEATHER_EVERY3HOURS_SUCCESS:\r\n        return {\r\n          ...state,\r\n          weatherData: action.payload,\r\n        };\r\n  \r\n      case FETCH_WEATHER_EVERY3HOURS_FAIL:\r\n        return {\r\n          ...state,\r\n          error: action.payload,\r\n        };\r\n  \r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  \r\n  export default weatherEvery3hourReducer;\r\n  ","import {\r\n    FETCH_FAVORITES_START,\r\n    FETCH_FAVORITES_SUCCESS,\r\n    FETCH_FAVORITES_FAIL,\r\n    FETCH_WEATHER_SUCCESS,\r\n    REMOVE_ERROR_SUCCESS,\r\n} from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n    citiesArr: [],\r\n    citiesData: [],\r\n    error: \"\",\r\n};\r\n\r\nconst favouriteWeatherReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FETCH_FAVORITES_START:\r\n            return {\r\n                ...state,\r\n                citiesArr: [...action.payload],\r\n            };\r\n\r\n        case FETCH_FAVORITES_SUCCESS:\r\n            return {\r\n                ...state,\r\n                citiesData: [...action.payload],\r\n            };\r\n\r\n        case FETCH_FAVORITES_FAIL:\r\n            return {\r\n                ...state,\r\n                error: action.payload,\r\n            };\r\n        case REMOVE_ERROR_SUCCESS:\r\n            return {\r\n                ...state,\r\n                error: \"\",\r\n            };\r\n\r\n        case FETCH_WEATHER_SUCCESS:\r\n            const newRefreshReduce = [...state.citiesData].reduce(\r\n                (acc, element, i) => {\r\n                    if (element[\"cityKey\"] === action.payload.city) {\r\n                        element.data = action.payload.data;\r\n                    }\r\n                    acc = [...acc, element];\r\n                    return acc;\r\n                },\r\n                []\r\n            );\r\n            return {\r\n                ...state,\r\n                citiesData: [...newRefreshReduce],\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default favouriteWeatherReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport WeatherEvery3hourReducer from \"./WeatherEvery3HourReducer\";\r\nimport favouriteWeatherReducer from \"./FavouriteWeatherReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    favorites: favouriteWeatherReducer,\r\n    forecast: WeatherEvery3hourReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import axios from \"axios\";\r\nimport { getResponseData } from \"../Utils/utils\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: process.env.REACT_APP_API_URL,\r\n});\r\n\r\nexport const getWeatherByCityName = async (cityName) => {\r\n    try {\r\n        const result = await instance.get(\"/data/2.5/weather\", {\r\n            params: {\r\n                q: cityName,\r\n                appid: process.env.REACT_APP_WEATHER_API_KEY,\r\n                units: \"metric\",\r\n            },\r\n        });\r\n        if (result.status === 200) {\r\n            const response = result.data;\r\n            const {\r\n                temp,\r\n                description,\r\n                icon,\r\n                windTransform,\r\n                windSpeed,\r\n            } = getResponseData(response);\r\n            return {\r\n                temp,\r\n                description,\r\n                icon,\r\n                windTransform,\r\n                windSpeed,\r\n            };\r\n        }\r\n        debugger\r\n        return { error: result.statusText };\r\n    } catch (error) {\r\n        return { error};\r\n    }\r\n};\r\n\r\nexport const getWeatherForecastByCityName = async ({cityName, units}) => {\r\n    return await instance\r\n        .get(\"/data/2.5/forecast/\", {\r\n            params: {\r\n                q: cityName,\r\n                appid: process.env.REACT_APP_WEATHER_API_KEY,\r\n                units,\r\n                cnt: 9,\r\n            },\r\n            // headers: {\r\n            //     // 'Access-Control-Allow-Origin': '*',\r\n            //     // 'Content-Type': 'application/json',\r\n            //     // mode: 'no-cors',\r\n            //   }\r\n        })\r\n        .then((response) => response.data)\r\n        .catch((error) => {\r\n            return {  error: error.message };\r\n        });\r\n};\r\n","import {\r\n    fetchWeatherSuccess,\r\n    fetchWeatherFailed,\r\n    fetchFavoritesFailed,\r\n    fetchFavoritesSuccess,\r\n    removeErrorSuccess,\r\n} from \"../actions/actionCreators\";\r\nimport { getWeatherByCityName } from \"../../Api/api\";\r\nimport { all, call, put } from \"redux-saga/effects\";\r\n\r\nexport function* fetchWeatherByCityNameSaga(action) {\r\n    try {\r\n        const city = action.payload;\r\n        const response = yield call(getWeatherByCityName, action.payload);\r\n        const weatherData = Object.assign(\r\n            {},\r\n            { data: response },\r\n            { city: city }\r\n        );\r\n        yield put(fetchWeatherSuccess(weatherData));\r\n    } catch (err) {\r\n        yield put(fetchWeatherFailed(err));\r\n    }\r\n}\r\n\r\nexport function* fetchFavoritesSaga(action) {\r\n    let results = [];\r\n    let finRresults = [];\r\n    const apiCalls = yield action.payload.map((key) => fetchSingleFav(key));\r\n    results = yield all(apiCalls);\r\n    let checkErrors = false;\r\n    for (let i = 0; i < results.length; i++) {\r\n        if (typeof results[i] === \"undefined\") {\r\n            checkErrors = true;\r\n        } else if (results[i].data.error) {\r\n            continue;\r\n        } else {\r\n            finRresults.push(results[i]);\r\n        }\r\n    }\r\n    if (!checkErrors) {\r\n        yield put(fetchFavoritesSuccess(finRresults));\r\n    }\r\n}\r\n\r\nfunction* fetchSingleFav(cityKey) {\r\n    try {\r\n        const weatherData = yield call(getWeatherByCityName, cityKey);\r\n        const transformedData = { cityKey, data: weatherData };\r\n        if (transformedData.data.error) {\r\n            yield put(fetchFavoritesFailed(transformedData));\r\n        }\r\n        return transformedData;\r\n    } catch (error) {\r\n        console.error(\"Error fetching Favorite\");\r\n        return undefined;\r\n    }\r\n}\r\n\r\nexport function* removeErrorSaga() {\r\n    yield put(removeErrorSuccess());\r\n}\r\n","import {\r\n  fetchWeatherEvery3HoursSuccess,\r\n  fetchWeatherEvery3HoursFailed,\r\n} from \"../actions/actionCreators\";\r\nimport { getWeatherForecastByCityName} from \"../../Api/api\";\r\nimport { call, put } from \"redux-saga/effects\";\r\nimport { getCityWeatherDetails,  } from \"../../Utils/utils\";\r\n\r\nexport function* fetchWeatherForecastByCityNameSaga(action) {\r\n  try {\r\n    const response = yield call(getWeatherForecastByCityName, action.payload);\r\n    const weatherData = yield call(getCityWeatherDetails, response);\r\n    yield put(fetchWeatherEvery3HoursSuccess(weatherData));\r\n  } catch (err) {\r\n    yield put(fetchWeatherEvery3HoursFailed(err));\r\n  }\r\n}\r\n","import { all, takeLatest } from \"@redux-saga/core/effects\";\r\nimport { FETCH_FAVORITES_START, FETCH_WEATHER_EVERY3HOURS_START, FETCH_WEATHER_START, REMOVE_ERROR_START } from \"../actions/actionTypes\";\r\nimport { fetchFavoritesSaga, fetchWeatherByCityNameSaga, removeErrorSaga } from \"./saga\";\r\nimport { fetchWeatherForecastByCityNameSaga } from \"./sagaForecast\";\r\n\r\nexport function* watchFavorites() {\r\n    yield all([\r\n        yield takeLatest(FETCH_FAVORITES_START, fetchFavoritesSaga)\r\n    ]);\r\n  }\r\n\r\nexport function* watcherSagasCities() {\r\n    yield all([\r\n      yield takeLatest(FETCH_WEATHER_START, fetchWeatherByCityNameSaga),\r\n    ]);\r\n  }\r\n\r\nexport function* watcherSagasError() {\r\n    yield all([\r\n      yield takeLatest(REMOVE_ERROR_START, removeErrorSaga),\r\n    ]);\r\n  }\r\n  \r\nexport function* watcherSagasForecast() {\r\n    yield all([\r\n      yield takeLatest(FETCH_WEATHER_EVERY3HOURS_START, fetchWeatherForecastByCityNameSaga)\r\n    ]);\r\n  }\r\n  ","import {\r\n  compose,\r\n  createStore,\r\n  applyMiddleware\r\n} from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport rootReducer from './reducers/rootReducer'\r\nimport { watcherSagasCities, watcherSagasError, watcherSagasForecast, watchFavorites } from './saga/rootSaga';\r\n\r\n\r\nconst composeEnhancers = process.env.NODE_ENV === 'development'\r\n  ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n  : null || compose;\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nexport const store = createStore(rootReducer, composeEnhancers(\r\n  applyMiddleware(sagaMiddleware)\r\n));\r\n\r\nsagaMiddleware.run(watchFavorites);\r\nsagaMiddleware.run(watcherSagasCities);\r\nsagaMiddleware.run(watcherSagasForecast);\r\nsagaMiddleware.run(watcherSagasError);","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport App from \"./App\";\nimport { DataProvider } from \"./DataContext/DataContext\";\nimport { store } from \"./Redux/store\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <DataProvider>\n            <App />\n        </DataProvider>\n    </Provider>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}